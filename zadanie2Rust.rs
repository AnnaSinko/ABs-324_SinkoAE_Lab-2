use std::io;

// Функция для подсчета чисел с нечетным количеством цифр
fn count_odd_digits(nums: &Vec<i32>) -> i32 {
    let mut count = 0; // Инициализируем счётчик
    for &num in nums { // Проходим по каждому числу в векторе
        // Если количество цифр в числе нечетное
        if num.to_string().len() % 2 != 0 {
            count += 1; // Увеличиваем счётчик
        }
    }
    count // Возвращаем количество чисел с нечетным количеством цифр
}

fn main() {
    println!("Введите количество элементов:");
    let mut n = String::new(); // Создаем строку для чтения ввода
    io::stdin().read_line(&mut n) // Читаем количество чисел
        .expect("Не удалось прочитать строку");
    let n: i32 = n.trim().parse() // Преобразуем строку в число
        .expect("Не удалось преобразовать в число");

    let mut nums = Vec::new(); // Инициализируем вектор для хранения чисел

    for _ in 0..n {
        println!("Введите число:");
        let mut num = String::new(); // Создаем строку для чтения ввода
        io::stdin().read_line(&mut num) // Читаем число
            .expect("Не удалось прочитать строку");
        let num: i32 = num.trim().parse() // Преобразуем строку в число
            .expect("Не удалось преобразовать в число");
        nums.push(num); // Добавляем число в вектор
    }

    println!("{}", count_odd_digits(&nums)); // Выводим количество чисел с нечетным количеством цифр
}